// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.9.1
// source: sample/sample.proto

package sample

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SampleMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo    string         `protobuf:"bytes,1,opt,name=foo,proto3" json:"foo,omitempty"`
	Sample *SampleRequest `protobuf:"bytes,2,opt,name=sample,proto3" json:"sample,omitempty"`
}

func (x *SampleMethodRequest) Reset() {
	*x = SampleMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleMethodRequest) ProtoMessage() {}

func (x *SampleMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleMethodRequest.ProtoReflect.Descriptor instead.
func (*SampleMethodRequest) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{0}
}

func (x *SampleMethodRequest) GetFoo() string {
	if x != nil {
		return x.Foo
	}
	return ""
}

func (x *SampleMethodRequest) GetSample() *SampleRequest {
	if x != nil {
		return x.Sample
	}
	return nil
}

type SampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*SampleRequest_Record `protobuf:"bytes,2,rep,name=records,json=Records,proto3" json:"records,omitempty"`
}

func (x *SampleRequest) Reset() {
	*x = SampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest) ProtoMessage() {}

func (x *SampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest.ProtoReflect.Descriptor instead.
func (*SampleRequest) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1}
}

func (x *SampleRequest) GetRecords() []*SampleRequest_Record {
	if x != nil {
		return x.Records
	}
	return nil
}

type SampleMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultSet *ResultSet `protobuf:"bytes,1,opt,name=ResultSet,proto3" json:"ResultSet,omitempty"`
}

func (x *SampleMethodResponse) Reset() {
	*x = SampleMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleMethodResponse) ProtoMessage() {}

func (x *SampleMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleMethodResponse.ProtoReflect.Descriptor instead.
func (*SampleMethodResponse) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{2}
}

func (x *SampleMethodResponse) GetResultSet() *ResultSet {
	if x != nil {
		return x.ResultSet
	}
	return nil
}

type ResultSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32                   `protobuf:"varint,1,opt,name=total,json=Total,proto3" json:"total,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,json=Count,proto3" json:"count,omitempty"`
	Records []*SampleRequest_Record `protobuf:"bytes,3,rep,name=records,json=Records,proto3" json:"records,omitempty"`
}

func (x *ResultSet) Reset() {
	*x = ResultSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSet) ProtoMessage() {}

func (x *ResultSet) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSet.ProtoReflect.Descriptor instead.
func (*ResultSet) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{3}
}

func (x *ResultSet) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResultSet) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ResultSet) GetRecords() []*SampleRequest_Record {
	if x != nil {
		return x.Records
	}
	return nil
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{4}
}

type SampleRequest_Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventVersion      string                                  `protobuf:"bytes,1,opt,name=eventVersion,proto3" json:"eventVersion,omitempty"`
	EventSource       string                                  `protobuf:"bytes,2,opt,name=eventSource,proto3" json:"eventSource,omitempty"`
	AwsRegion         string                                  `protobuf:"bytes,3,opt,name=awsRegion,proto3" json:"awsRegion,omitempty"`
	EventTime         string                                  `protobuf:"bytes,4,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	EventName         string                                  `protobuf:"bytes,5,opt,name=eventName,proto3" json:"eventName,omitempty"`
	UserIdentity      *SampleRequest_Record_UserIdentity      `protobuf:"bytes,6,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	RequestParameters *SampleRequest_Record_RequestParameters `protobuf:"bytes,7,opt,name=requestParameters,proto3" json:"requestParameters,omitempty"`
	ResponseElement   *SampleRequest_Record_ResponseElements  `protobuf:"bytes,8,opt,name=responseElement,proto3" json:"responseElement,omitempty"`
	S3                *SampleRequest_Record_S3                `protobuf:"bytes,9,opt,name=s3,proto3" json:"s3,omitempty"`
}

func (x *SampleRequest_Record) Reset() {
	*x = SampleRequest_Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record) ProtoMessage() {}

func (x *SampleRequest_Record) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SampleRequest_Record) GetEventVersion() string {
	if x != nil {
		return x.EventVersion
	}
	return ""
}

func (x *SampleRequest_Record) GetEventSource() string {
	if x != nil {
		return x.EventSource
	}
	return ""
}

func (x *SampleRequest_Record) GetAwsRegion() string {
	if x != nil {
		return x.AwsRegion
	}
	return ""
}

func (x *SampleRequest_Record) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *SampleRequest_Record) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *SampleRequest_Record) GetUserIdentity() *SampleRequest_Record_UserIdentity {
	if x != nil {
		return x.UserIdentity
	}
	return nil
}

func (x *SampleRequest_Record) GetRequestParameters() *SampleRequest_Record_RequestParameters {
	if x != nil {
		return x.RequestParameters
	}
	return nil
}

func (x *SampleRequest_Record) GetResponseElement() *SampleRequest_Record_ResponseElements {
	if x != nil {
		return x.ResponseElement
	}
	return nil
}

func (x *SampleRequest_Record) GetS3() *SampleRequest_Record_S3 {
	if x != nil {
		return x.S3
	}
	return nil
}

type SampleRequest_Record_UserIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrincipalId string `protobuf:"bytes,1,opt,name=principalId,proto3" json:"principalId,omitempty"`
}

func (x *SampleRequest_Record_UserIdentity) Reset() {
	*x = SampleRequest_Record_UserIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_UserIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_UserIdentity) ProtoMessage() {}

func (x *SampleRequest_Record_UserIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_UserIdentity.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_UserIdentity) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *SampleRequest_Record_UserIdentity) GetPrincipalId() string {
	if x != nil {
		return x.PrincipalId
	}
	return ""
}

type SampleRequest_Record_RequestParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceIPAddress string `protobuf:"bytes,1,opt,name=sourceIPAddress,proto3" json:"sourceIPAddress,omitempty"`
}

func (x *SampleRequest_Record_RequestParameters) Reset() {
	*x = SampleRequest_Record_RequestParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_RequestParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_RequestParameters) ProtoMessage() {}

func (x *SampleRequest_Record_RequestParameters) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_RequestParameters.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_RequestParameters) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *SampleRequest_Record_RequestParameters) GetSourceIPAddress() string {
	if x != nil {
		return x.SourceIPAddress
	}
	return ""
}

type SampleRequest_Record_ResponseElements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XAmzRequestId string `protobuf:"bytes,1,opt,name=x_amz_request_id,json=x-amz-request-id,proto3" json:"x_amz_request_id,omitempty"`
	XAmzId_2      string `protobuf:"bytes,2,opt,name=x_amz_id_2,json=x-amz-id-2,proto3" json:"x_amz_id_2,omitempty"`
}

func (x *SampleRequest_Record_ResponseElements) Reset() {
	*x = SampleRequest_Record_ResponseElements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_ResponseElements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_ResponseElements) ProtoMessage() {}

func (x *SampleRequest_Record_ResponseElements) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_ResponseElements.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_ResponseElements) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *SampleRequest_Record_ResponseElements) GetXAmzRequestId() string {
	if x != nil {
		return x.XAmzRequestId
	}
	return ""
}

func (x *SampleRequest_Record_ResponseElements) GetXAmzId_2() string {
	if x != nil {
		return x.XAmzId_2
	}
	return ""
}

type SampleRequest_Record_S3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S3SchemaVersion string                          `protobuf:"bytes,1,opt,name=s3SchemaVersion,proto3" json:"s3SchemaVersion,omitempty"`
	ConfigurationId string                          `protobuf:"bytes,2,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Bucket          *SampleRequest_Record_S3_Bucket `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Object          *SampleRequest_Record_S3_Object `protobuf:"bytes,4,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *SampleRequest_Record_S3) Reset() {
	*x = SampleRequest_Record_S3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_S3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_S3) ProtoMessage() {}

func (x *SampleRequest_Record_S3) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_S3.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_S3) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 3}
}

func (x *SampleRequest_Record_S3) GetS3SchemaVersion() string {
	if x != nil {
		return x.S3SchemaVersion
	}
	return ""
}

func (x *SampleRequest_Record_S3) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *SampleRequest_Record_S3) GetBucket() *SampleRequest_Record_S3_Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *SampleRequest_Record_S3) GetObject() *SampleRequest_Record_S3_Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type SampleRequest_Record_GlacierEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestoreEventData *SampleRequest_Record_GlacierEventData_RestoreEventData `protobuf:"bytes,1,opt,name=restoreEventData,proto3" json:"restoreEventData,omitempty"`
}

func (x *SampleRequest_Record_GlacierEventData) Reset() {
	*x = SampleRequest_Record_GlacierEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_GlacierEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_GlacierEventData) ProtoMessage() {}

func (x *SampleRequest_Record_GlacierEventData) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_GlacierEventData.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_GlacierEventData) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 4}
}

func (x *SampleRequest_Record_GlacierEventData) GetRestoreEventData() *SampleRequest_Record_GlacierEventData_RestoreEventData {
	if x != nil {
		return x.RestoreEventData
	}
	return nil
}

type SampleRequest_Record_S3_Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OwnerIdentity *SampleRequest_Record_S3_Bucket_OwnerIdentity `protobuf:"bytes,2,opt,name=ownerIdentity,proto3" json:"ownerIdentity,omitempty"`
	Arn           string                                        `protobuf:"bytes,3,opt,name=arn,proto3" json:"arn,omitempty"`
}

func (x *SampleRequest_Record_S3_Bucket) Reset() {
	*x = SampleRequest_Record_S3_Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_S3_Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_S3_Bucket) ProtoMessage() {}

func (x *SampleRequest_Record_S3_Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_S3_Bucket.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_S3_Bucket) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 3, 0}
}

func (x *SampleRequest_Record_S3_Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SampleRequest_Record_S3_Bucket) GetOwnerIdentity() *SampleRequest_Record_S3_Bucket_OwnerIdentity {
	if x != nil {
		return x.OwnerIdentity
	}
	return nil
}

func (x *SampleRequest_Record_S3_Bucket) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

type SampleRequest_Record_S3_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// empty if DELETE
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// empty if DELETE
	ETag string `protobuf:"bytes,3,opt,name=eTag,proto3" json:"eTag,omitempty"`
	// empty if not versioning
	VersionId string `protobuf:"bytes,4,opt,name=versionId,proto3" json:"versionId,omitempty"`
	Sequencer string `protobuf:"bytes,5,opt,name=sequencer,proto3" json:"sequencer,omitempty"`
}

func (x *SampleRequest_Record_S3_Object) Reset() {
	*x = SampleRequest_Record_S3_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_S3_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_S3_Object) ProtoMessage() {}

func (x *SampleRequest_Record_S3_Object) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_S3_Object.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_S3_Object) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 3, 1}
}

func (x *SampleRequest_Record_S3_Object) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SampleRequest_Record_S3_Object) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SampleRequest_Record_S3_Object) GetETag() string {
	if x != nil {
		return x.ETag
	}
	return ""
}

func (x *SampleRequest_Record_S3_Object) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SampleRequest_Record_S3_Object) GetSequencer() string {
	if x != nil {
		return x.Sequencer
	}
	return ""
}

type SampleRequest_Record_S3_Bucket_OwnerIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrincipalId string `protobuf:"bytes,1,opt,name=principalId,proto3" json:"principalId,omitempty"`
}

func (x *SampleRequest_Record_S3_Bucket_OwnerIdentity) Reset() {
	*x = SampleRequest_Record_S3_Bucket_OwnerIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_S3_Bucket_OwnerIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_S3_Bucket_OwnerIdentity) ProtoMessage() {}

func (x *SampleRequest_Record_S3_Bucket_OwnerIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_S3_Bucket_OwnerIdentity.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_S3_Bucket_OwnerIdentity) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 3, 0, 0}
}

func (x *SampleRequest_Record_S3_Bucket_OwnerIdentity) GetPrincipalId() string {
	if x != nil {
		return x.PrincipalId
	}
	return ""
}

type SampleRequest_Record_GlacierEventData_RestoreEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LifecycleRestorationExpiryTime string `protobuf:"bytes,1,opt,name=lifecycleRestorationExpiryTime,proto3" json:"lifecycleRestorationExpiryTime,omitempty"`
	LifecycleRestoreStorageClass   string `protobuf:"bytes,2,opt,name=lifecycleRestoreStorageClass,proto3" json:"lifecycleRestoreStorageClass,omitempty"`
}

func (x *SampleRequest_Record_GlacierEventData_RestoreEventData) Reset() {
	*x = SampleRequest_Record_GlacierEventData_RestoreEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_sample_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleRequest_Record_GlacierEventData_RestoreEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest_Record_GlacierEventData_RestoreEventData) ProtoMessage() {}

func (x *SampleRequest_Record_GlacierEventData_RestoreEventData) ProtoReflect() protoreflect.Message {
	mi := &file_sample_sample_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest_Record_GlacierEventData_RestoreEventData.ProtoReflect.Descriptor instead.
func (*SampleRequest_Record_GlacierEventData_RestoreEventData) Descriptor() ([]byte, []int) {
	return file_sample_sample_proto_rawDescGZIP(), []int{1, 0, 4, 0}
}

func (x *SampleRequest_Record_GlacierEventData_RestoreEventData) GetLifecycleRestorationExpiryTime() string {
	if x != nil {
		return x.LifecycleRestorationExpiryTime
	}
	return ""
}

func (x *SampleRequest_Record_GlacierEventData_RestoreEventData) GetLifecycleRestoreStorageClass() string {
	if x != nil {
		return x.LifecycleRestoreStorageClass
	}
	return ""
}

var File_sample_sample_proto protoreflect.FileDescriptor

var file_sample_sample_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f,
	0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x13, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x03,
	0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x03, 0x66, 0x6f, 0x6f, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0xbf, 0x0c,
	0x0a, 0x0d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a,
	0xed, 0x0b, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x77, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x11, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x57, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x33, 0x52, 0x02, 0x73,
	0x33, 0x1a, 0x30, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x49, 0x64, 0x1a, 0x3d, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x1a, 0x5e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x78, 0x5f, 0x61, 0x6d, 0x7a, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x78, 0x2d, 0x61, 0x6d, 0x7a, 0x2d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x78, 0x5f, 0x61, 0x6d, 0x7a, 0x5f, 0x69, 0x64, 0x5f, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x78, 0x2d, 0x61, 0x6d, 0x7a, 0x2d, 0x69, 0x64,
	0x2d, 0x32, 0x1a, 0x98, 0x04, 0x0a, 0x02, 0x53, 0x33, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x33, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x33, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3e, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x33, 0x2e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3e, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x33, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0xbd, 0x01,
	0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x0d,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x53, 0x33, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x6e, 0x1a, 0x31, 0x0a, 0x0d, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64, 0x1a, 0x7e, 0x0a,
	0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x1a, 0x9f, 0x02,
	0x0a, 0x10, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x6a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x47, 0x6c, 0x61, 0x63, 0x69,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x9e,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x1e, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1c, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22,
	0x47, 0x0a, 0x14, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x52, 0x09, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x22, 0x6f, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x53, 0x0a, 0x06, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x73,
	0x6d, 0x73, 0x6e, 0x79, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sample_sample_proto_rawDescOnce sync.Once
	file_sample_sample_proto_rawDescData = file_sample_sample_proto_rawDesc
)

func file_sample_sample_proto_rawDescGZIP() []byte {
	file_sample_sample_proto_rawDescOnce.Do(func() {
		file_sample_sample_proto_rawDescData = protoimpl.X.CompressGZIP(file_sample_sample_proto_rawDescData)
	})
	return file_sample_sample_proto_rawDescData
}

var file_sample_sample_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_sample_sample_proto_goTypes = []interface{}{
	(*SampleMethodRequest)(nil),                                    // 0: sample.SampleMethodRequest
	(*SampleRequest)(nil),                                          // 1: sample.SampleRequest
	(*SampleMethodResponse)(nil),                                   // 2: sample.SampleMethodResponse
	(*ResultSet)(nil),                                              // 3: sample.ResultSet
	(*EmptyResponse)(nil),                                          // 4: sample.EmptyResponse
	(*SampleRequest_Record)(nil),                                   // 5: sample.SampleRequest.Record
	(*SampleRequest_Record_UserIdentity)(nil),                      // 6: sample.SampleRequest.Record.UserIdentity
	(*SampleRequest_Record_RequestParameters)(nil),                 // 7: sample.SampleRequest.Record.RequestParameters
	(*SampleRequest_Record_ResponseElements)(nil),                  // 8: sample.SampleRequest.Record.ResponseElements
	(*SampleRequest_Record_S3)(nil),                                // 9: sample.SampleRequest.Record.S3
	(*SampleRequest_Record_GlacierEventData)(nil),                  // 10: sample.SampleRequest.Record.GlacierEventData
	(*SampleRequest_Record_S3_Bucket)(nil),                         // 11: sample.SampleRequest.Record.S3.Bucket
	(*SampleRequest_Record_S3_Object)(nil),                         // 12: sample.SampleRequest.Record.S3.Object
	(*SampleRequest_Record_S3_Bucket_OwnerIdentity)(nil),           // 13: sample.SampleRequest.Record.S3.Bucket.OwnerIdentity
	(*SampleRequest_Record_GlacierEventData_RestoreEventData)(nil), // 14: sample.SampleRequest.Record.GlacierEventData.RestoreEventData
}
var file_sample_sample_proto_depIdxs = []int32{
	1,  // 0: sample.SampleMethodRequest.sample:type_name -> sample.SampleRequest
	5,  // 1: sample.SampleRequest.records:type_name -> sample.SampleRequest.Record
	3,  // 2: sample.SampleMethodResponse.ResultSet:type_name -> sample.ResultSet
	5,  // 3: sample.ResultSet.records:type_name -> sample.SampleRequest.Record
	6,  // 4: sample.SampleRequest.Record.userIdentity:type_name -> sample.SampleRequest.Record.UserIdentity
	7,  // 5: sample.SampleRequest.Record.requestParameters:type_name -> sample.SampleRequest.Record.RequestParameters
	8,  // 6: sample.SampleRequest.Record.responseElement:type_name -> sample.SampleRequest.Record.ResponseElements
	9,  // 7: sample.SampleRequest.Record.s3:type_name -> sample.SampleRequest.Record.S3
	11, // 8: sample.SampleRequest.Record.S3.bucket:type_name -> sample.SampleRequest.Record.S3.Bucket
	12, // 9: sample.SampleRequest.Record.S3.object:type_name -> sample.SampleRequest.Record.S3.Object
	14, // 10: sample.SampleRequest.Record.GlacierEventData.restoreEventData:type_name -> sample.SampleRequest.Record.GlacierEventData.RestoreEventData
	13, // 11: sample.SampleRequest.Record.S3.Bucket.ownerIdentity:type_name -> sample.SampleRequest.Record.S3.Bucket.OwnerIdentity
	0,  // 12: sample.Sample.SampleMethod:input_type -> sample.SampleMethodRequest
	2,  // 13: sample.Sample.SampleMethod:output_type -> sample.SampleMethodResponse
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sample_sample_proto_init() }
func file_sample_sample_proto_init() {
	if File_sample_sample_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sample_sample_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_UserIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_RequestParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_ResponseElements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_S3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_GlacierEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_S3_Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_S3_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_S3_Bucket_OwnerIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_sample_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleRequest_Record_GlacierEventData_RestoreEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sample_sample_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sample_sample_proto_goTypes,
		DependencyIndexes: file_sample_sample_proto_depIdxs,
		MessageInfos:      file_sample_sample_proto_msgTypes,
	}.Build()
	File_sample_sample_proto = out.File
	file_sample_sample_proto_rawDesc = nil
	file_sample_sample_proto_goTypes = nil
	file_sample_sample_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SampleClient is the client API for Sample service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SampleClient interface {
	SampleMethod(ctx context.Context, in *SampleMethodRequest, opts ...grpc.CallOption) (*SampleMethodResponse, error)
}

type sampleClient struct {
	cc grpc.ClientConnInterface
}

func NewSampleClient(cc grpc.ClientConnInterface) SampleClient {
	return &sampleClient{cc}
}

func (c *sampleClient) SampleMethod(ctx context.Context, in *SampleMethodRequest, opts ...grpc.CallOption) (*SampleMethodResponse, error) {
	out := new(SampleMethodResponse)
	err := c.cc.Invoke(ctx, "/sample.Sample/SampleMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SampleServer is the server API for Sample service.
type SampleServer interface {
	SampleMethod(context.Context, *SampleMethodRequest) (*SampleMethodResponse, error)
}

// UnimplementedSampleServer can be embedded to have forward compatible implementations.
type UnimplementedSampleServer struct {
}

func (*UnimplementedSampleServer) SampleMethod(context.Context, *SampleMethodRequest) (*SampleMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SampleMethod not implemented")
}

func RegisterSampleServer(s *grpc.Server, srv SampleServer) {
	s.RegisterService(&_Sample_serviceDesc, srv)
}

func _Sample_SampleMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SampleMethodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SampleServer).SampleMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sample.Sample/SampleMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SampleServer).SampleMethod(ctx, req.(*SampleMethodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sample_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sample.Sample",
	HandlerType: (*SampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SampleMethod",
			Handler:    _Sample_SampleMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sample/sample.proto",
}
